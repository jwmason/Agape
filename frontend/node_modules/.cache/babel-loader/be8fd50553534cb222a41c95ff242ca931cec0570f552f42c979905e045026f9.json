{"ast":null,"code":"var _jsxFileName = \"/Users/kainoanishida/Desktop/Title/frontend/src/pages/Home/Home.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { Form, Image, Input, Button, Typography, Alert, Spin, Space } from 'antd';\nimport styles from './Home.module.css';\nimport './Home.css';\nimport logo from './logo.png';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nasync function sendMessage(message) {\n  //const [initialTextVisible, setInitialTextVisible] = useState(true);\n  if (message.trim() === '') {\n    return; // Ignore empty messages\n  }\n  const API_KEY = 'WH_9NNJliiak0re29MC__QQE-pY95uYtYd2W88-9pMQ7473';\n  const ASSISTANT_ID = '6550193a478ea2e2c5e67e54';\n  const endpoint = 'http://localhost:3001/chat';\n  // Prepare the request payload\n  const payload = {\n    post: message,\n    assistant_id: ASSISTANT_ID,\n    post_metadata: {\n      additionalProp1: 'string',\n      additionalProp2: 'string',\n      additionalProp3: 'string'\n    },\n    chat_session: 'string',\n    user_identifier: 'string'\n  };\n  // Make a POST request to the API endpoint\n  const response = await axios.post(endpoint, payload, {\n    headers: {\n      'accept': 'application/json',\n      'Authorization': API_KEY,\n      'Content-Type': 'application/json'\n    }\n  });\n  return response;\n\n  /*\n  try {\n       var chat = document.getElementById('chat');\n    var newMessage = document.createElement('div');\n    newMessage.className = 'message userMessage';\n    newMessage.textContent = message;\n    chat.appendChild(newMessage);\n     const responseText = response.data.response.response;\n    const responseTime = response.data.response.created_at_response;\n    const knowledgeSourcesIndex = responseText.indexOf('<b>Answer from Knowledge Sources:</b>');\n    const webIndex = responseText.indexOf('<b>Answer from Web:</b>');\n     const timeStamp = new Date(responseTime);\n    const timestamp = timeStamp.toLocaleString('en-US', { timeZone: 'America/New_York'});\n    const formattedTime = new Date(timestamp);\n     const hours = formattedTime.getHours() + 1; // this might be the worst code ive ever written.\n    const minutes = formattedTime.getMinutes();\n     const formattedTimeString = `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}`;\n     const knowledgeSourcesResponse = responseText.substring(\n    knowledgeSourcesIndex + '<b>Answer from Knowledge Sources:</b>'.length,\n    webIndex\n    )\n    \n       // Display the response from the server\n    var serverResponse = document.createElement('div');\n    serverResponse.className = 'message assistantMessage';\n    console.log(response.data.response);\n    serverResponse.innerHTML = `${formattedTimeString}<br><br>${knowledgeSourcesResponse}`;\n    chat.appendChild(serverResponse);\n       messageInput.value = '';\n    messageInput.focus();\n       // Scroll to the bottom after a small delay\n    chat.scrollTo({\n      top: chat.scrollHeight,\n      behavior: 'smooth',\n    });\n  } catch (error) {\n    console.error(error);\n  }\n  */\n}\nfunction getMessage() {\n  var messageInput = document.getElementById('messageInput');\n  var message = messageInput.value;\n  return message;\n}\n\n/*\nfunction DisplayPage(){\n  const [data, setData] = useState({});\n  \n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    \n    console.log(\"useEffect is running...\");\n\n    const fetchData = async () => {\n      \n      try {\n        console.log(\"fetchData is called...\");\n        setLoading(true);\n\n        const message = getMessage();\n        console.log(\"Message:\", message);\n\n        const response = await sendMessage(message);\n        console.log(\"Response from sendMessage:\", response);\n\n        setData(response);\n        setLoading(false);\n\n        if (response) {\n          console.log(\"Calling updateUI...\");\n          updateUI(response);\n        }\n      } catch (error) {\n        console.error(\"Error in fetchData:\", error);\n      }\n    };\n\n    fetchData();\n    \n\n    console.log(\"useEffect is done.\");\n\n    // Cleanup function (optional)\n    // return () => {\n    //   console.log(\"Cleanup function\");\n    // };\n  }, []); \n  \n\n return loading;\n}\n*/\n\n/*\n{\n  \"post\": \"how are you\",\n  \"assistant_id\": \"6550193a478ea2e2c5e67e54\",\n  \"post_metadata\": {\n    \"additionalProp1\": \"string\",\n    \"additionalProp2\": \"string\",\n    \"additionalProp3\": \"string\"\n  },\n  \"chat_session\": \"string\",\n  \"user_identifier\": \"string\"\n}\n\nwhat youll need:\napi key\n\na way to change post\na way to grab response\n\nwhat to use:\naxios and express? not too sure what these two do\n\n\n*/\n// Add this in node_modules/react-dom/index.js\n\nexport default function Home() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.home,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.topLeftContainer,\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: logo,\n          width: 200,\n          preview: false,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centerText\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"subtleText\",\n          children: \"TITLE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"newChat\",\n        onClick: refreshPage,\n        children: \"New Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: styles.exit,\n        onClick: exitPage,\n        children: \"Exit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatContainer\",\n        id: \"chatContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat\",\n          id: \"chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.inputContainer,\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            id: \"messageInput\",\n            placeholder: \"Type your message...\",\n            onInput: handleInput,\n            onKeyDown: handleKeyPress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Spin, {\n            className: styles.spinIcon,\n            spinning: loading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: styles.submit,\n            onClick: fetchData,\n            children: \"\\u25BA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 3\n    }, this)\n  }, void 0, false);\n}\n_c = Home;\n;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","Form","Image","Input","Button","Typography","Alert","Spin","Space","styles","logo","axios","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","sendMessage","message","trim","API_KEY","ASSISTANT_ID","endpoint","payload","post","assistant_id","post_metadata","additionalProp1","additionalProp2","additionalProp3","chat_session","user_identifier","response","headers","getMessage","messageInput","document","getElementById","value","Home","children","className","home","topLeftContainer","src","width","preview","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","refreshPage","exit","exitPage","id","inputContainer","type","placeholder","onInput","handleInput","onKeyDown","handleKeyPress","spinIcon","spinning","loading","submit","fetchData","_c","$RefreshReg$"],"sources":["/Users/kainoanishida/Desktop/Title/frontend/src/pages/Home/Home.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Form, Image, Input, Button, Typography, Alert, Spin, Space } from 'antd';\nimport styles from './Home.module.css';\nimport './Home.css';\nimport logo from './logo.png';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom'; \n\nasync function sendMessage(message) {\n  \n  //const [initialTextVisible, setInitialTextVisible] = useState(true);\n  if (message.trim() === '') {\n    return; // Ignore empty messages\n}\n\n  const API_KEY = 'WH_9NNJliiak0re29MC__QQE-pY95uYtYd2W88-9pMQ7473';\n  const ASSISTANT_ID = '6550193a478ea2e2c5e67e54';\n  const endpoint = 'http://localhost:3001/chat';\n  // Prepare the request payload\n  const payload = {\n    post: message,\n    assistant_id: ASSISTANT_ID,\n    post_metadata: {\n      additionalProp1: 'string',\n      additionalProp2: 'string',\n      additionalProp3: 'string',\n    },\n    chat_session: 'string',\n    user_identifier: 'string',\n  };\n  // Make a POST request to the API endpoint\n  const response = await axios.post(endpoint, payload, {\n        headers: {\n          'accept': 'application/json',\n          'Authorization': API_KEY,\n          'Content-Type': 'application/json',\n          \n        },\n      });\n  return response;\n \n    /*\n    try {\n  \n      var chat = document.getElementById('chat');\n      var newMessage = document.createElement('div');\n      newMessage.className = 'message userMessage';\n      newMessage.textContent = message;\n      chat.appendChild(newMessage);\n\n      const responseText = response.data.response.response;\n      const responseTime = response.data.response.created_at_response;\n      const knowledgeSourcesIndex = responseText.indexOf('<b>Answer from Knowledge Sources:</b>');\n      const webIndex = responseText.indexOf('<b>Answer from Web:</b>');\n\n      const timeStamp = new Date(responseTime);\n      const timestamp = timeStamp.toLocaleString('en-US', { timeZone: 'America/New_York'});\n      const formattedTime = new Date(timestamp);\n\n      const hours = formattedTime.getHours() + 1; // this might be the worst code ive ever written.\n      const minutes = formattedTime.getMinutes();\n\n      const formattedTimeString = `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}`;\n\n      const knowledgeSourcesResponse = responseText.substring(\n      knowledgeSourcesIndex + '<b>Answer from Knowledge Sources:</b>'.length,\n      webIndex\n      )\n      \n  \n      // Display the response from the server\n      var serverResponse = document.createElement('div');\n      serverResponse.className = 'message assistantMessage';\n      console.log(response.data.response);\n      serverResponse.innerHTML = `${formattedTimeString}<br><br>${knowledgeSourcesResponse}`;\n      chat.appendChild(serverResponse);\n  \n      messageInput.value = '';\n      messageInput.focus();\n  \n      // Scroll to the bottom after a small delay\n      chat.scrollTo({\n        top: chat.scrollHeight,\n        behavior: 'smooth',\n      });\n    } catch (error) {\n      console.error(error);\n    }\n    */\n  }\n\n\nfunction getMessage(){\n  var messageInput = document.getElementById('messageInput');\n  var message = messageInput.value;\n  return message;\n}\n\n/*\nfunction DisplayPage(){\n  const [data, setData] = useState({});\n  \n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    \n    console.log(\"useEffect is running...\");\n\n    const fetchData = async () => {\n      \n      try {\n        console.log(\"fetchData is called...\");\n        setLoading(true);\n\n        const message = getMessage();\n        console.log(\"Message:\", message);\n\n        const response = await sendMessage(message);\n        console.log(\"Response from sendMessage:\", response);\n\n        setData(response);\n        setLoading(false);\n\n        if (response) {\n          console.log(\"Calling updateUI...\");\n          updateUI(response);\n        }\n      } catch (error) {\n        console.error(\"Error in fetchData:\", error);\n      }\n    };\n\n    fetchData();\n    \n\n    console.log(\"useEffect is done.\");\n\n    // Cleanup function (optional)\n    // return () => {\n    //   console.log(\"Cleanup function\");\n    // };\n  }, []); \n  \n\n return loading;\n}\n*/\n\n\n\n\n/*\n{\n  \"post\": \"how are you\",\n  \"assistant_id\": \"6550193a478ea2e2c5e67e54\",\n  \"post_metadata\": {\n    \"additionalProp1\": \"string\",\n    \"additionalProp2\": \"string\",\n    \"additionalProp3\": \"string\"\n  },\n  \"chat_session\": \"string\",\n  \"user_identifier\": \"string\"\n}\n\nwhat youll need:\napi key\n\na way to change post\na way to grab response\n\nwhat to use:\naxios and express? not too sure what these two do\n\n\n*/\n// Add this in node_modules/react-dom/index.js\n\nexport default function Home() {\n  return (<>\n\n  <div className={styles.home}>\n\n    <div className={styles.topLeftContainer}>\n    <Image src={logo} width={200} preview={false} alt=\"\"/>\n\n    \n    </div>\n    <div className='centerText'>\n      <p className='subtleText'>TITLE</p>\n    </div>\n    <Button className='newChat' onClick={refreshPage}>New Chat</Button>\n    <Button className={styles.exit} onClick={exitPage}>Exit</Button>\n    <div className='chatContainer' id=\"chatContainer\">\n      <div className='chat' id=\"chat\">\n\n      </div>\n      <div className={styles.inputContainer}>\n        <Input\n          type=\"text\"\n          id=\"messageInput\"\n          placeholder=\"Type your message...\"\n          onInput={handleInput}\n          onKeyDown={handleKeyPress}\n        />\n        <Spin className={styles.spinIcon} spinning={loading}/>\n        <Button className={styles.submit} onClick={fetchData}>&#9658;</Button>\n      </div>\n    </div>\n  </div>\n    \n  </>\n  )\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}